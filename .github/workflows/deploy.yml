# .github/workflows/deploy.yml

name: Deploy to Google Cloud Run

on:
  push:
    branches:
      - main

permissions:
  actions: write
  contents: write
  id-token: write
  packages: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Google Cloud Auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
      
      - name: Configure Docker
        run: gcloud auth configure-docker gcr.io

      - name: Build and push container
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/cr-bot-sjr-demo:${{ github.sha }} .
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/cr-bot-sjr-demo:${{ github.sha }}

      - name: Deploy to Cloud Run
        run: |
          DEPLOY_OUTPUT=$(gcloud run deploy cr-bot-sjr-demo \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/cr-bot-sjr-demo:${{ github.sha }} \
            --platform managed \
            --region ${{ secrets.GCP_REGION }} \
            --allow-unauthenticated \
            --memory 2Gi \
            --timeout 15m \
            --min-instances 1 \
            --concurrency 10 \
            --set-env-vars="APP_ID=${{ secrets.APP_ID }}" \
            --set-env-vars="PRIVATE_KEY=${{ secrets.PRIVATE_KEY }}" \
            --set-env-vars="WEBHOOK_SECRET=${{ secrets.WEBHOOK_SECRET }}" \
            --set-env-vars="OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}")
          SERVICE_URL=$(gcloud run services describe cr-bot-sjr-demo --format 'value(status.url)' --region ${{ secrets.GCP_REGION }})
          echo "SERVICE_URL=$SERVICE_URL" >> $GITHUB_ENV

      - name: Set Webhook URL
        run: |
          gh auth status
          gh api \
            --method PATCH \
            -H "Accept: application/vnd.github+json" \
            /app/hook/config \
            -f url="$SERVICE_URL" \
            -f content_type="json"
        env:
          SERVICE_URL: ${{ env.SERVICE_URL }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
